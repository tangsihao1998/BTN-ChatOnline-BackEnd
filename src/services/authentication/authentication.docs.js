module.exports = {
	description: 'A service that verifies users using local and jwt strategies',
	idNames: {
		remove: '{accessToken}',
	},
	schemas: {
		authentication: {
			type: 'object',
			properties: {
				accessToken: {
					type: 'string',
					description: 'An access token generated by the authentication service',
				},
				authentication: {
					type: 'object',
					$ref: '#/components/schemas/authenticationObj',
				},
			},
		},

		authenticationObj: {
			type: 'object',
			properties: {
				strategy: {
					type: 'string',
					description: 'Authentication strategy (jwt, local, oAuth etc.)',
				},
				accessToken: {
					type: 'string',
					description: 'An access token generated by the authentication service.',
				},
				payload: {
					type: 'object',
					description: 'The decoded payload.',
				},
				user: {
					type: 'object',
					description: 'The authenticated user object.',
				},
			},
		},
	},
	operations: {
		create: {
			description: 'Attempt to authenticate user.',
			requestBody: {
				required: true,
				content: {
					'application/json': {
						schema: {
							type: 'object',
							properties: {
								strategy: {
									type: 'string',
									description: 'Authentication strategy (jwt, local, oAuth etc.)',
								},
								email: {
									type: 'string',
								},
								password: {
									type: 'string',
								},
							},
						},
						examples: {
							local: {
								summary: 'Authenticate using local strategy',
								value: {
									strategy: 'local',
									email: 'yourEmail@domain.com',
									password: 'supersecret',
								},
							},
						},
					},
				},
			},
			responses: {
				201: {
					description: 'authenticated',
					content: {
						'application/json': {
							schema: {
								$ref: '#/components/schemas/authentication',
							},
							examples: {
								local: {
									summary: 'Successfully authenticated',
									value: {
										accessToken: 'yourAccessToken',
										authentication: {
											strategy: 'local',
											accessToken: 'yourAccessToken',
											payload: {},
											user: {},
										},
									},
								},
							},
						},
					},
				},
				401: {
					description: 'invalid login',
				},
				500: {
					description: 'general error',
				},
			},
		},
		remove: {
			description: 'Verify accessToken and emit a logout event.',
			responses: {
				200: {
					description: 'success',
					content: {
						'application/json': {
							schema: {
								$ref: '#/components/schemas/authentication',
							},
							examples: {
								local: {
									summary: 'Successfully logged out',
									value: {
										accessToken: 'yourAccessToken',
										authentication: {
											strategy: 'local',
											accessToken: 'yourAccessToken',
											payload: {},
											user: {},
										},
									},
								},
							},
						},
					},
				},
				401: {
					description: 'failed to verify accessToken',
				},
				500: {
					description: 'general error',
				},
			},
		},
	},
};
